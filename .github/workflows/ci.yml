name: CI

on:
  workflow_dispatch:

jobs:
  macos-build-and-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Make install scripts executable
        run: chmod +x installation_scripts/install_macos_arm64.sh
      - name: install dependencies
        run: |
          ./installation_scripts/install_macos_arm64.sh install_system
      - name: cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/buildtrees
            vcpkg/downloads
            vcpkg/packages
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-
      - name: install package manager and libraries
        run: |
          ./installation_scripts/install_macos_arm64.sh install_vcpkg
      - name: configure and build project
        run: |
          ./installation_scripts/install_macos_arm64.sh build
      - name: run tests
        run: |
          ./installation_scripts/install_macos_arm64.sh
      - name: upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            build/debug/Testing/
            build/debug/bin/
  ubuntu-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Make install scripts executable
        run: chmod +x installation_scripts/install_ubuntu_arm64.sh
      - name: install system dependencies
        run: |
          ./installation_scripts/install_ubuntu_arm64.sh install_system
      - name: cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            vcpkg/buildtrees
            vcpkg/downloads
            vcpkg/packages
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-
      - name: install vcpkg packages
        run: |
          ./installation_scripts/install_ubuntu_arm64.sh install_vcpkg
      - name: configure, build project and run tests
        run: |
          ./installation_scripts/install_ubuntu_arm64.sh build test_all
      - name: upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ubuntu-artifacts
          path: |
            build/debug/Testing/
            build/debug/bin/
  windows-build-and-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: install system dependencies
        shell: pwsh
        run: |
          choco install llvm --version=20.1.7 -y
          choco install cmake ninja -y
      - name: install package manager and libraries
        shell: pwsh
        run: |
          ./vcpkg/bootstrap-vcpkg.bat
          ./vcpkg/vcpkg install
      - name: configure and build project
        shell: pwsh
        run: |
          cmake -DCMAKE_C_COMPILER="C:\Program Files\LLVM\bin\clang.exe" -DCMAKE_CXX_COMPILER="C:\Program Files\LLVM\bin\clang++.exe" --preset VcpkgDebug
          cmake --build build/debug
      - name: run tests
        shell: pwsh
        run: |
          ctest --test-dir ./build/debug --output-on-failure --extra-verbose
      - name: upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            build/debug/Testing/
            build/debug/bin/
